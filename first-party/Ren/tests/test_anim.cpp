#include "test_common.h"

#include "membuf.h"
#include "../Anim.h"

namespace {
unsigned char __anim[] = {
    0x41, 0x4e, 0x49, 0x4d, 0x5f, 0x53, 0x45, 0x51, 0x55, 0x45, 0x4e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00,
    0x00, 0x08, 0x01, 0x00, 0x00, 0x30, 0x01, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x78, 0x01, 0x00, 0x00, 0x84, 0x00,
    0x00, 0x00, 0x42, 0x6f, 0x6e, 0x65, 0x30, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xe0, 0xbd, 0x93, 0x60, 0x30, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4e, 0x6f, 0x6e, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x42, 0x6f, 0x6e, 0x65, 0x30, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xe0, 0xbd, 0x93, 0x60, 0x30, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x6f, 0x6e, 0x65, 0x30, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x41, 0x72, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x39, 0x00, 0x28, 0x30, 0x2e, 0x30, 0x00, 0x30,
    0x2e, 0x38, 0x39, 0x39, 0x39, 0x39, 0x39, 0x18, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf3, 0x04, 0x35,
    0x3f, 0xf4, 0x04, 0x35, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf3, 0x04, 0x35, 0x3f, 0xf4, 0x04,
    0x35, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xf3, 0x04, 0x35, 0x3f, 0xf4, 0x04, 0x35, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xf3, 0x04, 0x35, 0x3f, 0xf4, 0x04, 0x35, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf3, 0x04, 0x35, 0x3f, 0xf4, 0x04, 0x35, 0x3f, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf3, 0x04, 0x35, 0xbf, 0xf4, 0x04, 0x35, 0x3f};
unsigned int __anim_len = 508;
} // namespace

void test_anim() {
    printf("Test anim               | ");

    { // Load anim
        membuf sbuf(__anim, sizeof(__anim));
        std::istream in(&sbuf);

        Ren::AnimSequence anim;
        anim.Init(in);

        require(anim.act_name() == "ArmatureAction");
        require(anim.fps() == 24);
        require(anim.len() == 3);
        require(anim.frame_size() == 11);
        require(anim.frame_dur() == 1.0f / 24);
        require(anim.anim_dur() == 3.0f / 24);
        require(anim.num_bones() == 2);

        require(strcmp(anim.bone(0)->name,"Bone01") == 0);
        require(strcmp(anim.bone(0)->parent_name, "None") == 0);
        require(anim.bone(0)->id == 0);
        require(anim.bone(0)->offset == 0);
        require((anim.bone(0)->flags & uint32_t(Ren::eAnimBoneFlags::AnimHasTranslate)) == 1);

        require(strcmp(anim.bone(1)->name, "Bone02") == 0);
        require(strcmp(anim.bone(1)->parent_name, "Bone01") == 0);
        require(anim.bone(1)->id == 1);
        require(anim.bone(1)->offset == 7); // 4 for rotation, 3 for translation from previous bone
        require(anim.bone(1)->flags != uint32_t(Ren::eAnimBoneFlags::AnimHasTranslate));

        // translation of Bone01 frame 0
        require(anim.frames()[0] == 0);
        require(anim.frames()[1] == 0);
        require(anim.frames()[2] == 0);

        // rotation of Bone01 frame 0
        require(anim.frames()[3] == 0);
        require(anim.frames()[4] == 0);
        require(anim.frames()[5] == Approx(0.7071067690849304).epsilon(0.0001));
        require(anim.frames()[6] == Approx(0.7071067690849304).epsilon(0.0001));

        // rotation of Bone02 frame 0
        require(anim.frames()[7] == 0);
        require(anim.frames()[8] == 0);
        require(anim.frames()[9] == Approx(0.7071067690849304).epsilon(0.0001));
        require(anim.frames()[10] == Approx(0.7071067690849304).epsilon(0.0001));

        // translation of Bone01 frame 1
        require(anim.frames()[11] == 0);
        require(anim.frames()[12] == 5);
        require(anim.frames()[13] == 0);

        // rotation of Bone01 frame 1
        require(anim.frames()[14] == 0);
        require(anim.frames()[15] == 0);
        require(anim.frames()[16] == Approx(0.7071067690849304).epsilon(0.0001));
        require(anim.frames()[17] == Approx(0.7071067690849304).epsilon(0.0001));

        // rotation of Bone02 frame 1
        require(anim.frames()[18] == 0);
        require(anim.frames()[19] == 0);
        require(anim.frames()[20] == Approx(0.7071067690849304).epsilon(0.0001));
        require(anim.frames()[21] == Approx(0.7071067690849304).epsilon(0.0001));

        // translation of Bone01 frame 2
        require(anim.frames()[22] == 0);
        require(anim.frames()[23] == 0);
        require(anim.frames()[24] == 0);

        // rotation of Bone01 frame 2
        require(anim.frames()[25] == 0);
        require(anim.frames()[26] == 0);
        require(anim.frames()[27] == Approx(0.7071067690849304).epsilon(0.0001));
        require(anim.frames()[28] == Approx(0.7071067690849304).epsilon(0.0001));

        // rotation of Bone02 frame 2
        require(anim.frames()[29] == 0);
        require(anim.frames()[30] == 0);
        require(anim.frames()[31] == Approx(-0.7071067690849304).epsilon(0.0001));
        require(anim.frames()[32] == Approx(0.7071067690849304).epsilon(0.0001));
    }

    printf("OK\n");
}
